import sys
sys.path.append("/usr/share/pyshared/overviewer_core/")
#from manualmarkers import *
#from optimizeimages import pngnq, optipng
from observer import JSObserver

worlds["Overworld"] = "/minecraft/world"
worlds["Nether"] = "/minecraft/world_nether"
worlds["End"] = "/minecraft/world_the_end"

outputdir = "/var/www/html/overviewer/"

processes = 3

observer = JSObserver(outputdir, 10, messages=dict(totalTiles="Rendering %d tiles",
                                                   renderCompleted="Render completed in %02d:%02d:%02d",
                                                   renderProgress="Rendered %d of %d tiles (%d%% ETA: %s)"))

def signFilter(poi):
    if poi['id'] == 'Sign' or poi['id'] == 'minecraft:sign':
        if poi['Text1'] == '[overviewer]':
            return "\n".join(["\n", poi['Text2'], poi['Text3'], poi['Text4']])

# def signFilter(poi):
#     if poi['id'] == 'Sign' or poi['id'] == 'minecraft:sign':
#         if poi['Text3'] == 'Region':
#             if poi['Text1'] != "<--":
#                 if poi['Text2'] != "Wilderness":
#                     return "\n".join([poi['Text1'], poi['Text2'], poi['Text3'], poi['Text4']])
#
#
# def catacombFilter(poi):
#     if poi['id'] == 'Sign' or poi['id'] == 'minecraft:sign':
#         if "Levels:" in poi['Text2']:
#             return "\n".join([poi['Text1'], poi['Text2'], poi['Text3'], poi['Text4']])

# def dungeonFilter(poi):
#     if poi['id'] == 'MCDungeon':
#     try:
#         return (poi['name'], poi['description'])
#     except KeyError:
#         return poi['name'] + '\n'
#
#
# def tHuntFilter(poi):
#     if poi['id'] == 'MCDungeonTH':
#     try:
#         return (poi['name'], poi['description'])
#     except KeyError:
#       return poi['name'] + '\n'
#
#
# def tHuntWPFilter(poi):
#     if poi['id'] == 'MCDungeonTHW':
#     try:
#       return (poi['name'], poi['description'])
#     except KeyError:
#       return poi['name'] + '\n'

def playerIconsOverworld(poi):
    from time import strftime
    if poi['id'] == 'Player':
        if poi['Dimension'] == 0:
            poi['icon'] = "http://overviewer.org/avatar/%s" % poi['EntityId']
            # return "%s\nLast seen: %s\n(Location is approximate)" % (poi['EntityId'],strftime("%d %b %Y %H:%M:%S UTC", poi['time']))
            return "%s\nLast known location\n(approximate)" % (poi['EntityId'])

renders["overworld"] = {
    "world": "Overworld",
    "title": "Day",
    "showspawn": True,
    "renderchecks": 1,
    #"dimension": "world",
    'rendermode': 'smooth_lighting',
    #"optimizeimg": [pngnq(), optipng()],
    'minzoom': 3,
    #'manualpois': mymarkers,
    'markers': [
    	dict(name="Signs", filterFunction=signFilter, icon="signpost.png", checked=False),
        #dict(name="Dungeons", filterFunction=dungeonFilter, icon="icons/marker_tower_red.png", checked=False),
        #dict(name="TreasureHunts", filterFunction=tHuntFilter, icon="icons/marker_anvil_red.png", checked=False),
        #dict(name="Waypoints", filterFunction=tHuntWPFilter, icon="icons/marker_anvil.png", checked=False),
        dict(name="Players", filterFunction=playerIconsOverworld, checked=True),
        #dict(name="Catacombs", filterFunction=catacombFilter, icon="icons/marker_tower_red.png", checked=False),
    ]
}

renders["night"] = {
    "world": "Overworld",
    "title": "Night",
    #"dimension": "world_nether",
    'rendermode': [Base(), EdgeLines(), SmoothLighting(night=True)],
    "renderchecks": 1,
    #"optimizeimg": [pngnq(), optipng()],
    'minzoom': 3,
    #'manualpois': mymarkers,
    'markers': [
        #dict(name="Region Posts", filterFunction=signFilter, icon="icons/marker_town.png", checked=False),
        #dict(name="Dungeons", filterFunction=dungeonFilter, icon="icons/marker_tower_red.png", checked=False),
        #dict(name="TreasureHunts", filterFunction=tHuntFilter, icon="icons/marker_anvil_red.png", checked=False),
        #dict(name="Waypoints", filterFunction=tHuntWPFilter, icon="icons/marker_anvil.png", checked=False),
        dict(name="Players", filterFunction=playerIconsOverworld, checked=False),
    ]
}

renders["caves"] = {
    "world": "Overworld",
    "title": "Caves",
    "renderchecks": 1,
    #"dimension": "world_the_end",
    "rendermode": [Base(), EdgeLines(), Cave(only_lit=True), DepthTinting()],
    #"optimizeimg": [pngnq(), optipng()],
    'minzoom': 3,
}

renders["nether"] = {
    "world": "Nether",
    "title": "The Nether",
    "renderchecks": 1,
    #"dimension": "world_nether",
    "rendermode": [Base(), EdgeLines(), Nether(), SmoothLighting(strength=0.5)],
    #"optimizeimg": [pngnq(), optipng()],
    'minzoom': 3,
}

renders["end"] = {
    "world": "End",
    "title": "The End",
    #"dimension": "world_the_end",
    "renderchecks": 1,
    "rendermode": [Base(), EdgeLines(), SmoothLighting(strength=0.5)],
    #"optimizeimg": [pngnq(), optipng()],
    'minzoom': 3,
}

renders["biomes"] = {
    "world": "Overworld",
    "title": "Biomes",
    "renderchecks": 1,
    #"dimension": "world",
    "rendermode": [ClearBase(), BiomeOverlay()],
    #"optimizeimg": [pngnq(), optipng()],
    'minzoom': 3,
    "overlay": ["overworld"],
}
